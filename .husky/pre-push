#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

echo "üöÄ Running pre-push checks..."

#Test ast-grep rules
echo "üîç Testing ast-grep rules..."
pnpm test:ast-grep-rules || {
  echo "‚ùå ast-grep rules test failed"
  echo "One or more lint rules are broken"
  echo "See ast-grep-audit-report.md for fixes"
  exit 1
}

#Ensure smoke tests pass before pushing
echo "üß™ Running tests..."
if command -v pnpm test:e2e:smoke &> /dev/null; then
  pnpm test:e2e:smoke || {
    echo "‚ùå Smoke tests failed"
    echo "Fix failing tests before pushing"
    exit 1
  }
fi

#Verify build succeeds
echo "üèóÔ∏è  Verifying build..."
pnpm build || {
  echo "‚ùå Build failed"
  echo "Fix build errors before pushing"
  exit 1
}

# 3. Check for outdated dependencies with security vulnerabilities
echo "üîí Checking for security vulnerabilities..."
AUDIT_OUTPUT=$(pnpm audit --prod --audit-level=moderate 2>&1)
if echo "$AUDIT_OUTPUT" | grep -q "vulnerabilities"; then
  echo "‚ö†Ô∏è  Security vulnerabilities found in dependencies"
  echo "$AUDIT_OUTPUT"
  echo ""
  echo "Run: pnpm audit fix"
  # Warning only, don't block push
fi

# 4. Ensure remote branch exists and is up to date
CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)
REMOTE_BRANCH=$(git rev-parse --abbrev-ref --symbolic-full-name @{u} 2>/dev/null)

if [ -n "$REMOTE_BRANCH" ]; then
  git fetch origin "$CURRENT_BRANCH" --quiet
  LOCAL=$(git rev-parse @)
  REMOTE=$(git rev-parse @{u})

  if [ "$LOCAL" != "$REMOTE" ]; then
    echo "‚ö†Ô∏è  Your branch is not up to date with remote"
    echo "Run: git pull --rebase"
    # Warning only, don't block push
  fi
fi

# 5. Prevent pushing to master/main
if [ "$CURRENT_BRANCH" = "master" ] || [ "$CURRENT_BRANCH" = "main" ]; then
  echo "‚ùå Direct push to $CURRENT_BRANCH is not allowed"
  echo "Use pull requests for code review"
  exit 1
fi

# 6. Check migration integrity one last time
if git diff origin/"$CURRENT_BRANCH"..HEAD --name-only | grep -q "db/drizzle/"; then
  echo "üîç Database changes detected - final migration check..."
  pnpm db:verify || {
    echo "‚ùå Migration integrity check failed"
    exit 1
  }
fi

echo "‚úÖ All pre-push checks passed"
